<?xml version="1.0" encoding="UTF-8"?>
<project name="hets-mmt" default="jar-standalone" basedir=".">


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!--       DISPLAY HELP                                              -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="help">
        <echo>
      hets-mmt build file
    -------------------------------------------------------

      available targets:

      help        - print this message

        </echo>
    </target>

    <property environment="env" />
	<!-- file build.properties has some directories set -->
    <property file="build.properties" />
    
    <!-- One-JAR ant task, for packaging all dependency JARs into the main JAR file -->    	
	 <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" 
	        classpath="${lib}/one-jar-ant-task-0.97.jar" onerror="report"/>	
	
    <!-- The variable scalac.classpath holds all paths needed for the scalac task. -->
    <path id="scalac.classpath">
        <pathelement location="${deploy}/lib/scala-library.jar"/>
        <pathelement location="${deploy}/lib/scala-compiler.jar"/>
        <pathelement location="${deploy}/lib/scala-reflect.jar"/>
    	<pathelement location="${build.main}"/>
        <pathelement location="${deploy}/mmt/mmt-api.jar"/>
    	<pathelement location="${tiscaf}"/>
    	<pathelement location="${deploy}/mmt/mmt-lf.jar"/>
    </path>
		
    <path id="scaladoc.classpath">
        <path refid="scalac.classpath"/>
    </path>
   
	
    <!-- This defines the task scalac (which is similar to javac but for scala). -->
    <taskdef resource="scala/tools/ant/antlib.xml"
        classpathref="scalac.classpath"/>

	<!--   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++  -->
    <target name="init">
        <tstamp />
    </target>
	
	<!-- auxillary: get build/compilation time -->
    <target name="time">
        <tstamp>
        	<format property="current.time" pattern="dd/MM/yyyy hh:mm:ss aa" />        	
        </tstamp>        	
    	<!-- perhaps use it to make time-stamped files -->
    	<echo message="time: ${current.time}" /> 
    </target>
	
	<!-- C O M P I L E 
	compile .scala files to .class files  -->
	<target name="compile" depends="init">
		<mkdir dir="${build.main}"/>		
		<scalac 
			destdir="${build.main}" 
			srcdir="${src}" 
			classpathref="scalac.classpath" 
			deprecation="yes" />   
	</target>
	
	<!-- B U I L D 
	compile & build jar files  -->
	<target name="build" depends="compile, jar">
	</target>
	
	<!-- J A R 
	only build jar files  -->	
	<target name="jar" depends="compile">		
		<jar destfile="${build}/${jar}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>				
			</manifest>
			<fileset dir="${build}/main"/>
			
			<fileset file="${deploy}/mmt/mmt-api.jar" />			
 			<zipfileset dir="${src}" prefix="src"/>	
			<zipfileset dir="${lib}" includes="*.txt" prefix="META-INF"/>
		</jar>
	</target>

   <target name="clean">
   		<delete>
   			<fileset dir="${build}" />   		
   		</delete>
   </target>
	
	<!-- J A R  S T A N D A L O N E
	make jar standalone --> 
    <target name="jar-standalone" depends="compile">
         <one-jar destfile="${build}/${jar-standalone}">
            <!-- The main class of the jar -->
            <manifest>
                <attribute name="One-Jar-Main-Class" value="${main.class}"/>
            </manifest>
            <main>        
                <fileset dir="${build.main}" />
                <fileset dir="${src}" />               
            </main>
            <!-- Jar dependencies, which will be packaged as lib/*.jar -->
            <lib>
                <fileset file="${deploy}/mmt/mmt-api.jar" />  
                <fileset file="${deploy}/mmt/mmt-lf.jar" />     
            	<fileset file="${scala.dir}/scala-library.jar" />
            	<fileset file="${tiscaf}" />
            </lib>
            <zipfileset dir="${lib}" includes="*.txt" prefix="doc"/>
         </one-jar>
    </target>
	
	<!-- full copilation, build and deployment -->
	<target name="deploy-full" depends="jar-standalone, deploy">
	</target>
	<!-- only deployment -->
	<target name="deploy">
		<copy todir="${deploy.hets}">
			<fileset file="${build}/${jar-standalone}"/>
		</copy>
		<copy todir="">
			<fileset file="${build}/${jar-standalone}"/>
		</copy>
		<copy todir="${deploy}/mmt">
			<fileset file="${build}/${jar-standalone}"/>
			<fileset file="${build}/${jar}"/>
		</copy>
	</target>
	
</project>
