%*
   Signature for proof theory of Classical propositional logic
   @author Fulya Horozal, Florian Rabe
   @license LATIN
*%

%namespace "http://cds.omdoc.org/logics/propositional/classic/proof_theory.elf".
%namespace syntax = "syntax.elf".

%* true introduction *%
%sig Truth = {
  %include syntax.Truth    %open.
  trueI  : ded true.
}.

%* false elimination *%
%sig Falsity = {
  %include syntax.Falsity  %open.
  falseE : ded false -> {A} ded A.
}.

%* negation introduction and elimination *%
%sig NEG = {
  %include syntax.NEG      %open.
  notI   : (ded A -> {B} ded B) -> ded (not A).
  notE   : ded not A -> ded A -> {B} ded B.
}.

%* implication introduction and elimination *%
%sig IMP = {
  %include syntax.IMP      %open.
  impI   : (ded A -> ded B) -> ded (A imp B).
  impE   : ded (A imp B) -> ded A -> ded B.
}.

%* conjunction introduction and (left and right) elimination rules *%
%sig CONJ = {
  %include syntax.CONJ     %open.
  andI   : ded A -> ded B -> ded (A and B).
  andEl  : ded (A and B) -> ded A.
  andEr  : ded (A and B) -> ded B.
}.

%* disjunction elimination and (left and right) introduction rules *% 
%sig DISJ = {
  %include syntax.DISJ     %open or.
  orIl    : ded A -> ded (A or B).
  orIr    : ded B -> ded (A or B).
  orE     : ded (A or B) -> (ded A -> ded C) -> (ded B -> ded C) -> ded C.
}.

%* tertium non datur *%
%sig TND = {
  %include syntax.NEG      %open not.
  %include syntax.DISJ     %open or. 
  tnd    : ded (A or (not A)).
}.

%* Proof theory for Intuitionistic propositional logic *%
%sig IPL = {
  %include Truth    %open true trueI.
  %include Falsity  %open falseE.
  %include NEG      %open notI notE.
  %include IMP      %open imp impI impE.
  %include CONJ     %open and andI andEl andEr.
  %include DISJ     %open or orIl orIr orE.
}.

%* Proof theory for Classical propositional logic *%
%sig CPL = {
  %include IPL  %open.
  %include TND    %open.
}.

%* Tableaux calculus for Propositional logic *%
%sig TableauxProp = {
  %include syntax.PL %open.
  
  # : type.
  pos : o -> type. %prefix 0 pos.
  neg : o -> type. %prefix 0 neg.

  close: pos A -> neg A -> #.
  
  true1  : pos true -> #.
  false0 : neg false -> #.

  not1 : (neg A -> #) -> (pos not A -> #).
  not0 : (pos A -> #) -> (neg not A -> #).

  and1 : (pos A -> pos B -> #) -> (pos A and B -> #).
  and0 : (neg A -> #) -> (neg B -> #) -> (neg A and B -> #).

  or1 : (pos A -> #) -> (pos B -> #) -> (pos A or B -> #).
  or0 : (neg A -> neg B -> #) -> (neg A or B -> #).
  
  imp1 : (neg A -> #) -> (pos B -> #) -> (pos A imp B -> #).
  imp0 : (pos A -> neg B -> #) -> (neg A imp B -> #).
}.