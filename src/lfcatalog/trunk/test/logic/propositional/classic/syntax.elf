%*
   Propositional logic syntax
   @author Florian Rabe
   @license LATIN
*%

%namespace "http://cds.omdoc.org/logics/propositional/classic/syntax.elf".

%* Base symbols: type of formulas, type of deductions *%
%sig Base = {
  o     : type.
  ded   : o -> type.        %prefix 0 ded.
}.

%* true *%
%sig Truth = {
  %include Base   %open o.
  true  : o.
}.

%* false *%
%sig Falsity = {
  %include Base   %open o.
  false : o.
}.

%* not *%
%sig NEG = {
  %include Base   %open o.
  not   : o -> o.           %prefix 20 not.
}.

%* imp *%
%sig IMP = {
  %include Base   %open o.
  imp   : o -> o -> o.      %infix right 5 imp.
}.

%* and *%
%sig CONJ = {
  %include Base   %open o.
  and   : o -> o -> o.      %infix left 10 and.
}.

%* or *%
%sig DISJ = {
  %include Base   %open o.
  or   : o -> o -> o.       %infix left 10 or.
}.

%* equality (derived symbol) *%
%sig Equiv = {
  %include Base    %open.
  %include CONJ   %open.
  %include IMP   %open.
  equiv   : o -> o -> o = [a] [b] ((a imp b) and (b imp a)). %infix left 5 equiv.
}.

%* Propositional logic syntax *%
%sig PL = {
  %include Base     %open.	
  %include Truth    %open.
  %include Falsity  %open.
  %include NEG      %open.    
  %include IMP      %open.
  %include CONJ     %open.
  %include DISJ     %open.
}.
