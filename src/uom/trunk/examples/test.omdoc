<omdoc base="http://cds.omdoc.org/unsorted/uom.omdoc">
        <theory cdbase="http://cds.omdoc.org/unsorted/uom.omdoc" name="lists" >
         <constant name="elem">
       
       
     </constant><constant name="list">
       
       
     </constant><constant name="nil">
       
       
     </constant><constant name="cons">
       
       
     </constant><constant name="append">
       
       
     </constant><constant name="append_*">
       
       <definition><OMOBJ xmlns:om="om"><om:OMFOREIGN>  def append_*(l: Term, m: Term) : Term = { l match { case this.nil =&gt; m; case OMA(this.cons, List(this.elem, rest)) =&gt; OMA(this.cons, List(this.elem, append_*(rest, m)) ); case _ =&gt; throw new Exception(&quot;malformed term&quot;); } }  // This line has been added from VIM  /* This line too  */</om:OMFOREIGN></OMOBJ></definition>
     </constant>
      </theory><theory cdbase="http://cds.omdoc.org/unsorted/uom.omdoc" name="lists_ext" >
         <include from="http://cds.omdoc.org/unsorted/uom.omdoc?lists"></include><constant name="append_many">
       
       
     </constant><constant name="append_many_*">
       
       <definition><OMOBJ xmlns:om="om"><om:OMFOREIGN>  def append_many_*(l: Term*) : Term = { val lists = new org.omdoc.cds.unsorted.uom.omdoc.lists; l.toList match { case Nil =&gt; lists.nil case hd :: tl =&gt; lists.append_*(hd, append_many_*(tl : _*)) } }</om:OMFOREIGN></OMOBJ></definition>
     </constant>
      </theory>
     </omdoc>
