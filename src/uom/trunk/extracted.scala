//Source file generated by the Universal OpenMath Machine

import jomdoc._
import jomdoc.objects._

package org.omdoc.cds.unsorted.uom.omdoc
{
class lists {
  private val base = DPath(new utils.xml.URI("http://cds.omdoc.org/unsorted/uom.omdoc"))

  val list = OMS(SPath(MPath(base, LocalPath(List("lists"))), LocalPath(List("list"))))
  val nil = OMS(SPath(MPath(base, LocalPath(List("lists"))), LocalPath(List("nil"))))
  val cons = OMS(SPath(MPath(base, LocalPath(List("lists"))), LocalPath(List("cons"))))
  val append = OMS(SPath(MPath(base, LocalPath(List("lists"))), LocalPath(List("append"))))

  // UOM start http://cds.omdoc.org/unsorted/uom.omdoc?lists?append_*
  def append_*(l: Term, m: Term) : Term = { null }
  // UOM end

}
}

package org.omdoc.cds.unsorted.uom.omdoc
{
class lists_ext {
  private val base = DPath(new utils.xml.URI("http://cds.omdoc.org/unsorted/uom.omdoc"))

  val lists = new lists
  val append_many = OMS(SPath(MPath(base, LocalPath(List("lists_ext"))), LocalPath(List("append_many"))))

  // UOM start http://cds.omdoc.org/unsorted/uom.omdoc?lists_ext?append_many_*
  def append_many_*(l: Term*) : Term = { l.toList match { case Nil => lists.nil case hd :: tl => lists.append_*(hd, append_many_*(tl : _*)) } }
  // UOM end

}
}

