#! /bin/sh
### BEGIN INIT INFO
# Provides:          mmt
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: mmt initscript
# Description:       running the MMT web service
#                    placed in /etc/init.d.
### END INIT INFO

# adjusted from /etc/init.d/skeleton by C. Maeder
# install by "update-rc.d mmt-init defaults"

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC="MMT web service"
NAME=mmt
DAEMON=/usr/bin/screen
dir=/var/data/localmh/ext/MMT
ARGS="-D -m $dir/mmt.jar -noshell file \
 /var/data/localmh/MathHub/meta/inf/config/OAF/oaf.msl"


PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME-init

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
# [ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been or was started
	#   2 if daemon could not be started
	do_status > /dev/null || \
        start-stop-daemon -v --start --chuid www-data:www-data \
          --make-pidfile -p $PIDFILE --background \
          --exec $DAEMON -- $ARGS \
		|| return 2

	# Add code here, if necessary, that waits for the process to be ready
	# to handle requests from services started subsequently which depend
	# on this one.  As a last resort, sleep for some time.
}

do_status()
{
	status_of_proc -p "$PIDFILE" screen "$NAME"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   other if a failure occurred
        do_status > /dev/null && \
        start-stop-daemon -v --stop --user www-data \
           --exec $DAEMON -p $PIDFILE --retry=TERM/30/KILL/5 --oknodo && \
        rm -fv $PIDFILE
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  status)
        do_status; exit $?
	;;
  restart)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
	exit 3
	;;
esac
