// This is a simple demo script for the MMT shell. You can run it using
// java -jar jomdoc.jar file demo.mmt
// 
// It will generate some output that is understandable if you compare it line by line with the commands below.
// It also creates a file monoid.xhtml
// 
// The styles (= sets of notations) used in this script are of the form document?name. The document is somewhere in the folder cds.
// 
// The main principles are:
// - Styles can include other style via <include> elements. Local notations override included notations.
// 
// - Notations are identified by the optional knowledge item to which they apply (notation@for attribute) and the role in which that knowledge item is used (notation@role attribute). Roles like "Theory" or "Constant" refer to the the theory or symbol level. Roles like "application" or "constant" refer to the object level.
// 
// monoid.xhtml should be self-explanatory. Note that the whole file is generated by notation definitions, nothing is hard-coded.


// load the registry to see where working copies are located
catalog ../locutor.xml
// set up path to TNTBase to load missing files from the repository
//tntbase ../ombase.xml

// example retrievals
http://cds.omdoc.org/math/algebra/algebra1.omdoc?Monoid?unit
http://cds.omdoc.org/math/algebra/algebra1.omdoc?Monoid
http://cds.omdoc.org/math/algebra/algebra1.omdoc?Group?mon/unit

// address resolution relative to a base address
base http://cds.omdoc.org/
math/algebra/algebra1.omdoc?Monoid?unit

base math/algebra/algebra1.omdoc
?Monoid
?Monoid?unit

base ?Monoid
??unit
?/Group

base ?/Group?mon
?/Monoid?unit
??unit
??/inv

//retrieving the closure of a theory
base algebra1.omdoc
?Group closure

//retrieving the type/definition of a symbols
?Monoid?unit component type
?Monoid?unit component definition

// presentation of content using the "present" command (works like a piping)
// notation sets are addressed like theories
?Monoid present ../../omdoc/ascii.omdoc?ascii
?Monoid present ../../omdoc/mathml.omdoc?mathml

// writing output to a file using the "write" command (also works like piping)
?Monoid write monoid.txt
?Monoid xml write monoid.omdoc
?Monoid present ../../omdoc/mathml.omdoc?mathml write Monoid.xhtml
exit
