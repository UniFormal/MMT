namespace http://cds.omdoc.org/examples

theory NatLiterals : http://cds.omdoc.org/urtheories?LF =
  include ?NatRules
  include http://real.omdoc.org?Bool
  include http://real.omdoc.org?StandardNat
  
  // this only type-checks because ⊦ 1+1 = 2 unifies with ⊦ true 
  test  : ⊦ 1+1 = 2 = trueI

  
theory IntLiterals : http://cds.omdoc.org/urtheories?LF =
  include ?IntRules
  include http://real.omdoc.org?Bool
  include http://real.omdoc.org?StandardInt
  test  : ⊦ 1-3 = -2  = trueI

  
theory Vectors : http://cds.omdoc.org/urtheories?LF =
  include ?NatLiterals

  a     : type
  vec   : nat → type  # vec 1 prec 5
  empty : vec 0  # ∅ 
  cons  : {n} vec n → nat → vec n'  # 2 , 3

  append      : {m,n} vec m → vec n → vec (m + n)  # 3 @ 4
  // appendempty : {n, v: vec n} empty @ v = v
  // appendcons  : {m,n, x, v: vec m, w: vec n} (x, v) @ w = x @ (v,w)
  
  head : {n} vec n' → nat  # head 2
  // headcons : {n, x, v: vec n} head (x,v) = x
  
  // this only type-checks because vec 3 and vec 0''' are recognized as being equal 
  test1 : vec 3  = ∅,2,0,1
  // this only type-checks because vec 6 and vec (3+3) are recognized as being equal 
  test2 : vec 6  = test1 @ test1 
  // this only type-checks because vec n' unifies with vec 3
  test3 : a = head test1
