<?xml version="1.1"?>

<!DOCTYPE MODE SYSTEM "xmode.dtd">

<MODE>
	<PROPS>
		<PROPERTY NAME="commentStart" VALUE="/*" />
		<PROPERTY NAME="commentEnd" VALUE="*/" />
		<PROPERTY NAME="lineComment" VALUE="//" />
		<PROPERTY NAME="wordBreakChars" VALUE=".:[]{}() " />
		<PROPERTY NAME="tabSize" VALUE="2"/>
		<PROPERTY NAME="indentSize" VALUE="2"/>

		<!-- Auto indent -->
		<PROPERTY NAME="indentOpenBrackets" VALUE=""/>
		<PROPERTY NAME="indentCloseBrackets" VALUE=""/>
      <PROPERTY NAME="indentNextLines" VALUE=".*\{\s*"/>
      <!--<PROPERTY NAME="unindentThisLine" VALUE="^\s*}\s*$"/>-->
      <PROPERTY NAME="unindentNextLines" VALUE="^\s*\}\s*$"/>
      
		<!-- set this to 'true' if you want to use GNU coding style -->
		<PROPERTY NAME="doubleBracketIndent" VALUE="false" />
		<PROPERTY NAME="lineUpClosingBracket" VALUE="true" />
	</PROPS>
	<RULES ESCAPE="\" IGNORE_CASE="FALSE" HIGHLIGHT_DIGITS="FALSE" DEFAULT="NULL">

		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>"</BEGIN>
			<END>"</END>
		</SPAN>

		<SPAN TYPE="COMMENT4">
		  <BEGIN>%{HIDE</BEGIN>
		  <END>}%</END>
		</SPAN>
		
		<SPAN TYPE="COMMENT4" DELEGATE="MAIN">
		  <BEGIN>%{SHOW</BEGIN>
		  <END>}%</END>
		</SPAN>

		<SPAN TYPE="COMMENT3" MATCH_TYPE="COMMENT4">
		  <BEGIN>_(</BEGIN>
		  <END>)_</END>
		</SPAN>

		<SPAN TYPE="COMMENT1">
			<BEGIN>%{</BEGIN>
			<END>}%</END>
		</SPAN>

		<!-- see comment on NESTED1 below -->
		<SPAN TYPE="LITERAL1" DELEGATE="NESTED1">
		  <BEGIN>(</BEGIN>
		  <END>)</END>
		</SPAN>
		
		<SPAN TYPE="KEYWORD1" DELEGATE="scala::MAIN">
		   <BEGIN>&#x1b;scala</BEGIN>
		   <END>&#x18;</END>
		</SPAN>
		
		
		<SEQ TYPE="KEYWORD1">&#x1c;</SEQ>
		<SEQ TYPE="KEYWORD1">&#x1d;</SEQ>
		<SEQ TYPE="KEYWORD1">&#x1e;</SEQ>
		<SEQ TYPE="KEYWORD1">&#x1f;</SEQ>
		
		<SEQ TYPE="OPERATOR">.</SEQ>
		<SEQ TYPE="OPERATOR">:</SEQ>
		<SEQ TYPE="OPERATOR">@</SEQ>
		<SEQ TYPE="OPERATOR">#</SEQ>
		<SEQ TYPE="OPERATOR">=</SEQ>
  		<SEQ TYPE="OPERATOR">(</SEQ>
		<SEQ TYPE="OPERATOR">)</SEQ>
		<SEQ TYPE="OPERATOR">[</SEQ>
		<SEQ TYPE="OPERATOR">]</SEQ>
		<SEQ TYPE="OPERATOR">{</SEQ>
		<SEQ TYPE="OPERATOR">}</SEQ>
		<KEYWORDS>
         <OPERATOR>:=</OPERATOR>
			<KEYWORD2>namespace</KEYWORD2>
			<KEYWORD2>import</KEYWORD2>
			<KEYWORD2>theory</KEYWORD2>
			<KEYWORD2>constant</KEYWORD2>
			<KEYWORD2>include</KEYWORD2>
			<KEYWORD2>pattern</KEYWORD2>
			<KEYWORD2>struct</KEYWORD2>
			<KEYWORD2>implicit</KEYWORD2>
		</KEYWORDS>
	</RULES>


   <!-- NESTED1 to NESTED4 handle different levels of nested () brackets 
		     this abuses jEdit's LITERAL1 to LITERAL4 types
	-->
	<RULES SET="NESTED1">
		<SPAN TYPE="LITERAL2" DELEGATE="NESTED2">
		  <BEGIN>(</BEGIN>
		  <END>)</END>
		</SPAN>
		<!--<SEQ_REGEXP TYPE="LITERAL1">([A-Z]|[a-z]|[0-9])+</SEQ_REGEXP> -->

		<IMPORT DELEGATE="MAIN"/>
   </RULES>

	<RULES SET="NESTED2">
		<SPAN TYPE="LITERAL3" DELEGATE="NESTED3">
		  <BEGIN>(</BEGIN>
		  <END>)</END>
		</SPAN>
		<IMPORT DELEGATE="MAIN"/>
   </RULES>

	<RULES SET="NESTED3">
		<SPAN TYPE="LITERAL4" DELEGATE="NESTED4">
		  <BEGIN>(</BEGIN>
		  <END>)</END>
		</SPAN>
		<IMPORT DELEGATE="MAIN"/>
   </RULES>

	<RULES SET="NESTED4">
		<SPAN TYPE="LITERAL1" DELEGATE="NESTED1">
		  <BEGIN>(</BEGIN>
		  <END>)</END>
		</SPAN>
		<IMPORT DELEGATE="MAIN"/>
   </RULES>
</MODE>
