This folder contains the MMT plugin for jEdit.
This file contains instructions how to setup the plugin.

-----------------------------------------
Installation

1) Check out MMT
   svn co https://svn.kwarc.info/repos/MMT/deploy

2) Install jEdit

   For example, get it from http://www.jedit.org/

   Using the Plugin Manager, install the following plugins if you do not have them already
   - ErrorList
   - Console
   - SideKick
   - Hyperlinks
   
3) Add the MMT plugin to jEdit

   Locate your jedit settings folder -- call it JEDIT -- and run
   
     cd deploy/jedit-plugin
     setup.sh install JEDIT
   
   to integrate the MMT files with jEdit.
   setup.bat words accordingly on Windows.
   Both can also be used with 'uninstall JEDIT' instead of 'install JEDIT' to remove the files.
  
   Alternatively, if you want or have to install manually, do the following:
   a) jars
      copy all jars from plugin/jars into JEDIT/jars
   b) plugin-specific data
      copy the content of plugin/plugins/info.kwarc.mmt.jedit.MMTPlugin to JEDIT/plugins/info.kwarc.mmt.jedit.MMTPlugin
   c) modes
      - copy all modes from plugin/modes into JEDIT/modes
      - add the mode catalog entries in the file
        plugin/modes/catalog
        to the file
        JEDIT/modes/catalog
   d) abbreviations
      append the content of plugin/abbrevs to JEDIT/abbrevs

4) Load the plugin 

   Run jEdit and in the plugin manager dialog select the MMT plugin.
   After doing that once, the plugin will be loaded automatically when jEdit is started.
   
5) Unicode font

   If necessary, install a font on your system that includes
   - a good amount of unicode characters
   - readable glyphs for the characters ASCII 27-31, which MMT uses as delimiters.
   
   An example of such a font is GNU unifont.
   
   Set this font as the font for jEdit text areas. 

6) Configure MMT

To configure the MMT plugin, go to the MMT pane of the jEdit plugin options dialog.

The startup file gives a path to an MMT script that is run when the MMT plugin is loaded (usually when jEdit is started).

A commented example is provided by the file startup.mmt in this directory.

----------------------------------------
Updating

To update the plugin, simply repeat the installation (or overwrite the individual jar files if you know which ones changed).
Then restart jEdit or reload all changed jars via jEdit's plugin manager dialog.

-----------------------------------------
jEdit tips

It is advisable to make the following general jEdit configurations

Plugins: Browse the plugin manager and install all additional plugins you fancy, e.g., BufferTabs, CandyFolds, DirtyGutter, SuperAbbrevs, WhiteSpace, and XML.

Encoding: Set UTF-8 as your default encoding in the Options/Encodings.

-----------------------------------------
Functionality

The mode "mmt" is added for MMT files, which includes syntax highlighting.
Mode-specific options including the appearance of the syntax highlighting can be configured via the generic jEdit options dialog.
Most importantly, the mode assigns the token types OPERATOR and KEYWORDn.
The token types LITERAL1 to LITERAL4 are assigned to brackets at different levels.
The token type COMMENT4 is reseved by MMT. It is assigned to all hidden, i.e., invisible, parts. Changes to its text style are ignored and overwritten.

The files abbrevs contains a number of useful abbreviations to produce Unicode characters using Latex-like commands.
For example, "jPi" expands like "\Pi". The details can be configured in jEdit's Options/Abbreviations dialog or by editing the JEDIT/abbrevs file.

The MMT plugin integrates with jEdit core components and a number of other plugins.
Many of these provided "dockable windows". These are subwindows of the jEdit window, which you open separately via the respective plugin.

- File System Browser: The plugin provides actions specific to jEdit file system browser.
  These are available in the browser's plugin menu.
  This includes in particular actions for compiling files.
  Files do not have to be opened for this, and all errors will appear in the ErrorList.

- Sidekick: The plugin provides a Sidekick parser (called "mmt").
  Thus, the dockable window of the sidekick plugin provides an outline view and autocompletion for MMT files,
  both of which are synchronized with the current caret position.
  Parsing errors appear in the dockable window of the ErrorList plugin.

- ErrorList: The plugin provides an ErrorList error source (called "mmt"), which maintains compilation errors.
  These errors appear in the same dockable window of the ErrorList plugin.

- Hyperlinks: The plugin provides a Hyperlink source (called "mmt").
  This displays the MMT URI of the identifier under the cursor and permits jumping to its declaration.
  Jumping only works if the parser has read the file already.
  you can enforce the latter by parsing the respective files in your MMT startup script (see below).

- Console: The plugin provides a Console (named "mmt") for the Console plugin.
  This permits direct access to the MMT shell in the dockable Console window.
  See the MMT manual for the documentation of the MMT shell.

- Hiding: All text enclosed in %{SHOW }% is hidable and shown. All text enclosed in %{HIDE }% is hidable and hidden.
  The delimiters themselves are always hidden.
  Hiding is achieved by reducing the font size to 0, i.e., the hidden parts are still in the buffer and treated as usual in all situations except for displaying.
 
The plugin provides a number of jEdit actions.
These can be bound to any key, menu item, or toolbar button via the generic jEdit options dialog.
By default, they are available in the MMT plugin menu.
